<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="IN-SATHEESHNAI" ignored="0" name="Default test" tests="5" failures="0" timestamp="26 Feb 2019 10:07:47 GMT" time="18.899" errors="0">
  <testcase name="@AfterMethod operationsOnTestCompletion" time="0.0" classname="reusableLibrary.DriverFactory">
    <failure type="org.testng.TestNGException" message="
Can inject only one of &amp;lt;ITestContext, XmlTest, Method, Object[], ITestResult&amp;gt; into a @AfterMethod annotated operationsOnTestCompletion.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection">
      <![CDATA[org.testng.TestNGException: 
Can inject only one of <ITestContext, XmlTest, Method, Object[], ITestResult> into a @AfterMethod annotated operationsOnTestCompletion.
For more information on native dependency injection please refer to http://testng.org/doc/documentation-main.html#native-dependency-injection
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:407)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:356)
at org.testng.internal.Parameters.createParameters(Parameters.java:635)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:190)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:209)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @AfterMethod operationsOnTestCompletion -->
  <testcase name="@AfterMethod operationsOnTestCompletion" time="0.0" classname="reusableLibrary.DriverFactory">
    <skipped/>
  </testcase> <!-- @AfterMethod operationsOnTestCompletion -->
  <testcase name="@AfterMethod operationsOnTestCompletion" time="0.0" classname="reusableLibrary.DriverFactory">
    <skipped/>
  </testcase> <!-- @AfterMethod operationsOnTestCompletion -->
  <testcase name="@AfterMethod operationsOnTestCompletion" time="0.0" classname="reusableLibrary.DriverFactory">
    <skipped/>
  </testcase> <!-- @AfterMethod operationsOnTestCompletion -->
  <testcase name="@AfterMethod operationsOnTestCompletion" time="0.0" classname="reusableLibrary.DriverFactory">
    <skipped/>
  </testcase> <!-- @AfterMethod operationsOnTestCompletion -->
  <testcase name="@AfterClass tearDownFunction" time="0.0" classname="reusableLibrary.DriverFactory">
    <skipped/>
  </testcase> <!-- @AfterClass tearDownFunction -->
  <testcase name="loginasvendor" time="8.61" classname="regression.TC_OrderOwner_Approval"/>
  <testcase name="clickontask" time="0.0" classname="regression.TC_OrderOwner_Approval">
    <skipped/>
  </testcase> <!-- clickontask -->
  <testcase name="clickondemand" time="0.0" classname="regression.TC_OrderOwner_Approval">
    <skipped/>
  </testcase> <!-- clickondemand -->
  <testcase name="clickonpositionid" time="0.0" classname="regression.TC_OrderOwner_Approval">
    <skipped/>
  </testcase> <!-- clickonpositionid -->
  <testcase name="logout" time="0.0" classname="regression.TC_OrderOwner_Approval">
    <skipped/>
  </testcase> <!-- logout -->
</testsuite> <!-- Default test -->
